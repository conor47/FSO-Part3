{"version":3,"sources":["components/Persons.js","components/Filter.js","components/AddNew.js","components/Notification.js","services/contact.js","App.js","index.js"],"names":["Persons","contacts","handleClick","map","person","name","number","onClick","id","Filter","props","onChange","AddNew","onSubmit","value","newName","handleName","newNumber","handleNumber","type","Notification","message","className","baseURL","newObject","axios","post","delete","put","App","useState","setContacts","setNewName","setNewNumber","searchName","setSearcName","setMessage","useEffect","console","log","get","then","response","data","numbersToShow","filter","toLowerCase","includes","event","target","preventDefault","contains","forEach","nameObject","contactservice","concat","setTimeout","currentContact","find","contact","window","confirm","catch","err","contact1","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45aae409.chunk.js","sourcesContent":["import React from 'react';\n\nconst Persons = ({contacts, handleClick}) => {\n    return (\n        <div>\n            {contacts.map(person =>\n            <li key={person.id}>\n                {person.name} : {person.number}\n                <span>        </span>\n                <button onClick={() => handleClick(person.id)}>Delete</button>\n            </li>\n          )}\n        </div>\n    )\n}\n\nexport default Persons","import React from 'react'\n\nconst Filter = (props) => {\n    return (\n        <div>\n            <form>\n                <div>\n                    filter name : <input onChange={props.onChange}/>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default Filter","import React from 'react'\n\nconst AddNew = (props) => {\n    return (\n        <div>\n            <form onSubmit={props.onSubmit}>\n                <div>\n                    name: <input value={props.newName} onChange={props.handleName}/>\n                </div>\n                <div>\n                    number: <input value={props.newNumber} onChange={props.handleNumber}/>\n                </div>\n                <div>\n                    <button type=\"submit\">add</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default AddNew","import React from 'react'\n\nconst Notification = ({message}) => {\n    if (message === '') {\n        return null\n    }\n\n    return (\n        <div className='success'>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import axios from 'axios'\n\nconst baseURL = '/api/persons'\n\nconst create = newObject => {\n    return axios.post(baseURL, newObject)\n}\n\nconst deleteContact = id => {\n    return axios.delete(`${baseURL}/${id}`)\n}\n\nconst update = (newObject,id) => {\n    return axios.put(`${baseURL}/${id}`, newObject)\n}\n\nexport default {create, deleteContact, update}","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport AddNew from './components/AddNew'\nimport Notification from './components/Notification'\nimport axios from 'axios'\nimport contactservice from './services/contact'\n\n\nconst App = () => {\n  const [contacts , setContacts] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [searchName, setSearcName] = useState ('')\n  const [message, setMessage] = useState ('')\n\n  useEffect(() => {\n    console.log('effect')\n    axios\n      .get('http://localhost:3001/persons')\n      .then(response => {\n        console.log('promise fulfilled')\n        setContacts(response.data)\n      })\n  }, [])\n\n  const numbersToShow = searchName \n  ? contacts.filter(person => person.name.toLowerCase().includes(searchName.toLowerCase()))\n  : contacts\n\n  const addName = event => {\n    event.preventDefault()\n    console.log(\"new person being added\");\n    let contains = false\n    contacts.forEach(person => {\n      if (newName === person.name){\n        contains = true \n      }\n    })\n    if (!contains){\n      const nameObject = {\n        name : newName,\n        number : newNumber\n      }\n\n      contactservice\n        .create(nameObject)\n        .then(response => {\n          setContacts(contacts.concat(response.data))\n        setNewName('')\n        setNewNumber('')\n        setMessage(`${nameObject.name} was successfully added`)\n        setTimeout(() => {\n          setMessage('')\n        }, 5000)\n        })\n\n\n      \n    }\n    if (contains){\n      const currentContact = contacts.find(contact => contact.name === newName)\n      console.log(\"current contact\",currentContact);\n      const nameObject = {\n        ...currentContact,\n        number: newNumber\n      }\n\n      console.log(\"new contact\",nameObject);\n\n      const result = window.confirm(`${nameObject.name} already exists, replace the old number with a new one ?`)\n\n      if (result){\n      contactservice\n      .update(nameObject, nameObject.id)\n      .then(response => {\n        console.log(response);\n      })\n      .catch(err => {\n        console.log(err);\n      })\n\n      setMessage(`${nameObject.name} was successfully updated`)\n        setTimeout(() => {\n          setMessage('')\n        }, 5000)\n\n      setContacts(contacts.map(contact => contact.id !== nameObject.id ? contact : nameObject))\n    }\n  }\n  }\n\n  const deleteContact = id => {\n    const contact1 = contacts.filter(contact => contact.id === id)\n    const result = window.confirm(`Delete ${contact1[0].name} ?`)\n\n    if (result){\n    contactservice\n      .deleteContact(id)\n      .then(response => {\n        console.log(response)\n      })\n      .catch(err => {\n        console.log(err);\n      })\n\n      setContacts(contacts.filter(contact => contact.id !== id))\n    }\n  }\n\n  const handleName= event => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumber = event => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearch = event => {\n    setSearcName(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <Filter onChange={handleSearch} />\n      <h2>Add a new</h2>\n      <AddNew onSubmit={addName} newName={newName} handleName={handleName} newNumber={newNumber} handleNumber={handleNumber}/>\n      <h2>Numbers</h2>\n      <div>\n        <Persons contacts={numbersToShow} handleClick={deleteContact}/>\n      </div>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}